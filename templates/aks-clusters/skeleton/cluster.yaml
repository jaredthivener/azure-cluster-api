---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ clusterName }}
  namespace: default
  labels:
    environment: {{ environment }}
    businessUnit: {{ businessUnit }}
    owner: {{ owner }}
    managedBy: clusterapi
spec:
  clusterNetwork:
    services:
      cidrBlocks: ["10.1.0.0/16"]
    pods:
      cidrBlocks: ["10.0.0.0/16"]
    serviceDomain: "cluster.local"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: AzureManagedControlPlane
    name: {{ clusterName }}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureManagedCluster
    name: {{ clusterName }}
---
# Azure Resource Group
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureResourceGroup
metadata:
  name: rg-{{ businessUnit }}-aks-{{ environment }}-{{ region }}-001
  namespace: default
spec:
  location: {{ region }}
  tags:
    environment: {{ environment }}
    businessUnit: {{ businessUnit }}
    owner: {{ owner }}
    managedBy: clusterapi
---
# AKS Control Plane Configuration
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: AzureManagedControlPlane
metadata:
  name: {{ clusterName }}-control-plane
  namespace: default
spec:
  location: {{ region }}
  resourceGroupName: rg-{{ businessUnit }}-aks-{{ environment }}-{{ region }}-001
  subscriptionID: {{ subscriptionId }}
  version: {{ kubernetesVersion }}
  sshPublicKey: ${SSH_PUBLIC_KEY}
  dnsServiceIP: 10.1.0.10
  networkPolicy: cilium
  networkPlugin: azure
  networkPluginMode: "Overlay"
  disableLocalAccounts: true
  # Enhanced security settings
  aadProfile:
    managed: true
    adminGroupObjectIDs: ["${AAD_ADMIN_GROUP_ID}"]
    enableAzureRBAC: true
  apiServerAccessProfile:
    enablePrivateCluster: false  # Set to true for private cluster
    authorizedIPRanges: ["0.0.0.0/0"]  # Restrict this in production
  # OIDC issuer profile for workload identity
  oidcIssuerProfile:
    enabled: true
  # Security profile configuration
  securityProfile:
    workloadIdentity:
      enabled: true
    imageCleaner:
      enabled: true
      intervalHours: 48
  # Enhanced network profile settings
  networkProfile:
    outboundType: loadBalancer
    loadBalancerSku: standard
    dockerBridgeCidr: 172.17.0.1/16
  # Maintenance settings
  autoUpgradeProfile:
    upgradeChannel: stable
    nodeOSUpgradeChannel: SecurityPatch
  # Add-on profiles
  addonProfiles:
  - name: azurepolicy
    enabled: true
  - name: omsagent
    enabled: true
  - name: azureKeyvaultSecretsProvider
    enabled: true
  - name: cilium
    enabled: true
  - name: azureDiskCSIDriver
    enabled: true
  - name: azureFileCSIDriver
    enabled: true
  identityRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureClusterIdentity
    name: cluster-identity
  virtualNetwork:
    name: vnet-{{ businessUnit }}-aks-{{ environment }}-001
    cidrBlock: {{ vnetCidr }}
    subnet:
      name: snet-aks-nodes-{{ environment }}-001
      cidrBlock: {{ nodeCidr }}
---
# AKS Managed Cluster
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedCluster
metadata:
  name: {{ clusterName }}
  namespace: default
spec:
  controlPlaneEndpoint:
    host: {{ clusterName }}.azmk8s.io
    port: 443
  identityRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureClusterIdentity
    name: cluster-identity
  location: {{ region }}
    networkSpec:
    apiServerLB:
      type: Internal
  resourceGroupName: rg-{{ businessUnit }}-aks-{{ environment }}-{{ region }}-001
  tags:
    environment: {{ environment }}
    businessUnit: {{ businessUnit }}
    owner: {{ owner }}
    managedBy: clusterapi
---
# System Node Pool
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: {{ clusterName }}-system
  namespace: default
spec:
  clusterName: {{ clusterName }}
  replicas: {{ nodeCount }}
  template:
    spec:
      bootstrap:
        dataSecretName: ""
      clusterName: {{ clusterName }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureManagedMachinePool
        name: {{ clusterName }}-system
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedMachinePool
metadata:
  name: {{ clusterName }}-system
  namespace: default
spec:
  mode: System
  osDiskSizeGB: 128
  osDiskType: Ephemeral  # Changed from Managed to Ephemeral
  vmSize: {{ skuType }}
  sku: AzureLinux
  enableAutoScaling: true
  minCount: {{ nodeCount }}
  maxCount: {{ nodeCount | twice }}
  maxPods: 110  # CIS compliance framework recommends a maximum of 110 pods per node
  # High availability configuration
  availabilityZones:
    - "1"
    - "2"
    - "3"
  # System node pool taints to prevent application workloads
  taints:
    - effect: NoSchedule
      key: CriticalAddonsOnly
      value: "true"
  nodeLabels:
    nodepool: system
    nodetype: system
  # OS configuration
  enableNodePublicIP: false
  upgradeSettings:
    maxSurge: "33%"
  # Ephemeral disk configuration
  osDiskCachingType: ReadOnly
---
# Worker Node Pool
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: {{ clusterName }}-worker
  namespace: default
spec:
  clusterName: {{ clusterName }}
  replicas: {{ nodeCount }}
  template:
    spec:
      bootstrap:
        dataSecretName: ""
      clusterName: {{ clusterName }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureManagedMachinePool
        name: {{ clusterName }}-worker
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedMachinePool
metadata:
  name: {{ clusterName }}-worker
  namespace: default
spec:
  mode: User
  osDiskSizeGB: 128 
  osDiskType: Ephemeral  # Changed from Managed to Ephemeral
  vmSize: {{ skuType }}
  sku: AzureLinux
  enableAutoScaling: true
  minCount: {{ nodeCount }}
  maxCount: {{ nodeCount | twice }}
  maxPods: 110  # CIS compliance framework recommends a maximum of 110 pods per node
  # High availability configuration
  availabilityZones:
    - "1"
    - "2"
    - "3"
  # Node configuration
  enableNodePublicIP: false
  upgradeSettings:
    maxSurge: "33%"
  nodeLabels:
    nodepool: workload
    nodetype: application
  # Ephemeral disk configuration
  osDiskCachingType: ReadOnly
